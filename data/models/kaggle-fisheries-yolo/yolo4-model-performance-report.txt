net.optimized_memory = 0 
mini_batch = 1, batch = 32, time_steps = 1, train = 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 268 K-images (4 Kilo-batches_64) 

 calculation mAP (mean average precision)...

 detections_count = 6322, unique_truth_count = 3142  
 rank = 0 of ranks = 6322  rank = 100 of ranks = 6322  rank = 200 of ranks = 6322  rank = 300 of ranks = 6322  rank = 400 of ranks = 6322  rank = 500 of ranks = 6322  rank = 600 of ranks = 6322  rank = 700 of ranks = 6322  rank = 800 of ranks = 6322  rank = 900 of ranks = 6322  rank = 1000 of ranks = 6322  rank = 1100 of ranks = 6322  rank = 1200 of ranks = 6322  rank = 1300 of ranks = 6322  rank = 1400 of ranks = 6322  rank = 1500 of ranks = 6322  rank = 1600 of ranks = 6322  rank = 1700 of ranks = 6322  rank = 1800 of ranks = 6322  rank = 1900 of ranks = 6322  rank = 2000 of ranks = 6322  rank = 2100 of ranks = 6322  rank = 2200 of ranks = 6322  rank = 2300 of ranks = 6322  rank = 2400 of ranks = 6322  rank = 2500 of ranks = 6322  rank = 2600 of ranks = 6322  rank = 2700 of ranks = 6322  rank = 2800 of ranks = 6322  rank = 2900 of ranks = 6322  rank = 3000 of ranks = 6322  rank = 3100 of ranks = 6322  rank = 3200 of ranks = 6322  rank = 3300 of ranks = 6322  rank = 3400 of ranks = 6322  rank = 3500 of ranks = 6322  rank = 3600 of ranks = 6322  rank = 3700 of ranks = 6322  rank = 3800 of ranks = 6322  rank = 3900 of ranks = 6322  rank = 4000 of ranks = 6322  rank = 4100 of ranks = 6322  rank = 4200 of ranks = 6322  rank = 4300 of ranks = 6322  rank = 4400 of ranks = 6322  rank = 4500 of ranks = 6322  rank = 4600 of ranks = 6322  rank = 4700 of ranks = 6322  rank = 4800 of ranks = 6322  rank = 4900 of ranks = 6322  rank = 5000 of ranks = 6322  rank = 5100 of ranks = 6322  rank = 5200 of ranks = 6322  rank = 5300 of ranks = 6322  rank = 5400 of ranks = 6322  rank = 5500 of ranks = 6322  rank = 5600 of ranks = 6322  rank = 5700 of ranks = 6322  rank = 5800 of ranks = 6322  rank = 5900 of ranks = 6322  rank = 6000 of ranks = 6322  rank = 6100 of ranks = 6322  rank = 6200 of ranks = 6322  rank = 6300 of ranks = 6322 class_id = 0, name = alb, ap = 90.13%   	 (TP = 1590, FP = 198) 
class_id = 1, name = bet, ap = 66.96%   	 (TP = 150, FP = 35) 
class_id = 2, name = dol, ap = 76.72%   	 (TP = 68, FP = 10) 
class_id = 3, name = lag, ap = 92.08%   	 (TP = 73, FP = 3) 
class_id = 4, name = shark, ap = 94.63%   	 (TP = 129, FP = 11) 
class_id = 5, name = yft, ap = 90.59%   	 (TP = 495, FP = 91) 
class_id = 6, name = other, ap = 90.95%   	 (TP = 233, FP = 46) 

 for conf_thresh = 0.25, precision = 0.87, recall = 0.87, F1-score = 0.87 
 for conf_thresh = 0.25, TP = 2738, FP = 394, FN = 404, average IoU = 69.08 % 

 IoU threshold = 50 %, used 101 Recall-points 
 mean average precision (mAP@0.50) = 0.860096, or 86.01 % 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
